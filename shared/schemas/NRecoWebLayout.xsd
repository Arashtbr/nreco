<?xml version="1.0" encoding="UTF-8"?>
<!--?xml-stylesheet type="text/xsl" href="WikiDoc.xsl"?-->
<xs:schema targetNamespace="urn:schemas-nreco:nreco:web:layout:v1" 
			xmlns="urn:schemas-nreco:nreco:web:layout:v1" 
			elementFormDefault="qualified"
			xmlns:xs="http://www.w3.org/2001/XMLSchema"
			xmlns:vs="http://schemas.microsoft.com/Visual-Studio-Intellisense">
	<xs:annotation>
		<xs:documentation>NReco Layout DSM Documentation</xs:documentation>
	</xs:annotation>
	<xs:group name="viewGroup">
		<xs:annotation><xs:documentation>View</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element ref="view" />
		</xs:choice>
	</xs:group>

	<xs:element name="view">
		<xs:annotation>
			<xs:documentation>Basic UI view.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="datasources" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>View data sources.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:group ref="datasourceGroup" maxOccurs="unbounded"/>
					</xs:complexType>
				</xs:element>
				<!-- actions -->
				<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>View actions.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs="1" maxOccurs="unbounded">
							<xs:group ref="actionOperationGroup"/>
						</xs:sequence>
						<xs:attribute name="name" use="required" type="viewActionNameType">
							<xs:annotation>
								<xs:documentation>Action name determines when it should be executed.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Unique view name. It can be used for view route, for instance.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="sessiondatacontext" use="optional" type="xs:boolean"/>
			<xs:attribute name="caption" use="optional" type="xs:string"/>
			<xs:anyAttribute processContents="skip"/>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="viewActionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="load"/>
			<xs:enumeration value="prerender"/>
		</xs:restriction>
	</xs:simpleType>


	<xs:group name="datasourceGroup">
		<xs:annotation><xs:documentation>Data Source</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="dalc">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="condition" type="xs:string" minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="required">
						<xs:annotation><xs:documentation>Data Source ID. It should be unique in the view scope.</xs:documentation></xs:annotation>
					</xs:attribute>
					<xs:attribute name="sourcename" type="xs:string" use="required">
						<xs:annotation><xs:documentation>Data source name (database table name or data view name) for select/update/insert/delete operations.</xs:documentation></xs:annotation>
					</xs:attribute>
					<xs:attribute name="selectsourcename" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Data source name for select operation.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="condition" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Data condition (relex syntax).</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="insertmode" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Determines whether datasource should return empty new row for select operation if no resoults found.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:group name="aspnetRendererGroup">
		<xs:annotation><xs:documentation>Renderer</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="field">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string">
						<xs:annotation><xs:documentation>Field name (usually it is refers to database table field name or object property).</xs:documentation></xs:annotation>
					</xs:attribute>
					<xs:attribute name="format" use="optional" type="xs:string">
						<xs:annotation>
							<xs:documentation>Format expression.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="lookup" use="optional" type="xs:string">
						<xs:annotation>
							<xs:documentation>Provider name that should be used as 'lookup'.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="list" type="baseListType">
				<xs:annotation>
					<xs:documentation>Generic ASP.NET ListView</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="form" type="baseFormType">
				<xs:annotation>
					<xs:documentation>Generic ASP.NET FormView</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="usercontrol">
				<xs:annotation>
					<xs:documentation>Custom ASP.NET user control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
					<xs:attribute name="src" use="required" type="xs:string"/>
					<xs:anyAttribute namespace="##any"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="repeater">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="provider">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="header" type="xs:string" minOccurs="0"/>
						<xs:element name="footer" type="xs:string" minOccurs="0"/>
						<xs:element name="separator" type="xs:string" minOccurs="0"/>
						<xs:element name="item" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="separator" use="optional" type="xs:string"/>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ul">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="provider" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="item" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ol">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="provider" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="item" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup"  minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="updatepanel">
				<xs:annotation>
					<xs:documentation>ASP.NET Update Panel.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="aspnetRendererGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="expression">
				<xs:complexType>
					<xs:group ref="expressionGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="linkbutton">
				<xs:annotation>
					<xs:documentation>ASP.NET Link Button.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="caption" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="arg" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="command" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Command name (depends from context). Possible values for linkbuttons inside "form"/"list" are "insert", "edit", "cancel", etc.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="validate" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Enables "form" validation for this linkbutton</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="link">
				<xs:annotation>
					<xs:documentation>HTML link.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="url" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="caption" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="url" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed url</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="target" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="blank"/>
								<xs:enumeration value="parent"/>
								<xs:enumeration value="self"/>
								<xs:enumeration value="top"/>
								<xs:enumeration value="popup"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="googlechart">
				<xs:annotation>
					<xs:documentation>Google Chart</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:group ref="googlechartGroup" minOccurs="1"  maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="mschart">
				<xs:annotation>
					<xs:documentation>MS Chart</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:group ref="mschartGroup" minOccurs="1"  maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="tabs">
				<xs:annotation>
					<xs:documentation>JQuery UI Tabs Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="tab">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="caption" minOccurs="0" maxOccurs="1">
										<xs:complexType>
											<xs:group ref="expressionGroup"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="visible" minOccurs="0" maxOccurs="1">
										<xs:complexType>
											<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="renderer">
										<xs:complexType>
											<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="caption" use="optional" type="xs:string">
									<xs:annotation>
										<xs:documentation>Fixed tab caption</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="selected" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="cookie"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="name" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="widget">
				<xs:annotation>
					<xs:documentation>JQuery UI Widget</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="aspnetRendererGroup"/>
					</xs:sequence>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed widget caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="toolbox">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="aspnetRendererGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="placeholder">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="renderer" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="visible" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
							</xs:complexType>							
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vfsmanager">
				<xs:annotation>
					<xs:documentation>VFS-based file manager</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="filesystem" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Filesystem component name</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="filepreview">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="filesystem" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Filesystem component name</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="dashboard">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="widget">
							<xs:complexType>
								<xs:choice minOccurs="1" maxOccurs="1">
									<xs:element name="renderer">
										<xs:complexType>
											<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
										</xs:complexType>
									</xs:element>
								</xs:choice>
								<xs:attribute name="caption" type="xs:string" use="optional"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="jfullcalendar">
				<xs:complexType>
					
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	
	<xs:group name="formFieldEditorGroup">
		<xs:annotation>
			<xs:documentation>Editor</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="textbox">
				<xs:annotation>
					<xs:documentation>ASP.NET TextBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="empty-is-null" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="numbertextbox">
				<xs:annotation>
					<xs:documentation>ASP.NET TextBox Control for number input</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="format" type="xs:string" use="optional"/>
					<xs:attribute name="type" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="integer"/>
								<xs:enumeration value="decimal"/>
								<xs:enumeration value="double"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="textarea">
				<xs:annotation>
					<xs:documentation>ASP.NET multiline TextBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="rows" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="passwordtextbox">
				<xs:annotation>
					<xs:documentation>TextBox-based password editor</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="encrypter" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkbox">
				<xs:annotation>
					<xs:documentation>ASP.NET CheckBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
				</xs:complexType>
			</xs:element>			
			<xs:element name="dropdownlist">
				<xs:annotation>
					<xs:documentation>ASP.NET DropDownList Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="context" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="lookup" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>"Lookup" provider name (should return entries list)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="value" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Entry member name that should be used as value</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="text" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Entry member name that should be used as visible text</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkboxlist">
				<xs:annotation>
					<xs:documentation>ASP.NET CheckBoxList-based relation editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="relation" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="sourcename" use="required" type="xs:string"/>
								<xs:attribute name="left" use="required" type="xs:string"/>
								<xs:attribute name="right" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="multiselect">
				<xs:annotation>
					<xs:documentation>JQuery Multiselect-based relation editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="relation" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="sourcename" use="required" type="xs:string"/>
								<xs:attribute name="left" use="required" type="xs:string"/>
								<xs:attribute name="right" use="required" type="xs:string"/>
								<xs:attribute name="position" use="optional" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="checklist">
				<xs:annotation>
					<xs:documentation>JQuery checklist-based relation editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="relation" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="sourcename" use="required" type="xs:string"/>
								<xs:attribute name="left" use="required" type="xs:string"/>
								<xs:attribute name="right" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="default" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="provider" use="optional" type="xs:string"/>
							</xs:complexType>
						</xs:element>

					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="datepicker">
				<xs:annotation>
					<xs:documentation>JQuery DatePicker.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="year" type="xs:boolean" use="optional"/>
					<xs:attribute name="year-range" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
      <xs:element name="timepicker">
        <xs:annotation>
          <xs:documentation>JQuery TimePicker.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="seconds" use="optional" type="xs:boolean"/>
          <xs:attribute name="datatype">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="time"/>
                <xs:enumeration value="int"/>
                <xs:enumeration value="string"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="markitup">
				<xs:annotation>
					<xs:documentation>JQuery MarkItUp Textarea editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="rows" use="optional" type="xs:integer"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="jwysiwyg">
				<xs:annotation>
					<xs:documentation>JQuery Wysiwyg Textarea HTML-editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="plugins">
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:element name="vfs-insert-image" minOccurs="0">
										<xs:complexType>
											<xs:attribute name="filesystem" type="xs:string" use="required"/>
											<xs:attribute name="toolbar" type="xs:string" use="required"/>
											<xs:attribute name="uploadpath" type="xs:string" use="optional"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="usercontrol" minOccurs="0">
										<xs:complexType>
											<xs:attribute name="name" type="xs:string" use="required"/>
											<xs:attribute name="src" type="xs:string" use="required"/>
											<xs:attribute name="toolbar" type="xs:string" use="required"/>
											<xs:anyAttribute namespace="##any"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="rows" use="optional" type="xs:integer"/>
					<xs:attribute name="cols" use="optional" type="xs:integer"/>
					<xs:attribute name="resize" use="optional" type="xs:boolean"/>
					<xs:attribute name="max-height" use="optional" type="xs:boolean"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="singlefile">
				<xs:complexType>
					<xs:attribute name="filesystem" type="xs:string" use="required"/>
					<xs:attribute name="basepath" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="flexbox">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:choice>
									<xs:element name="relex" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
								</xs:choice>
								<xs:attribute name="text" type="xs:string" use="required"/>
								<xs:attribute name="value" type="xs:string" use="required"/>
								<xs:attribute name="relex" type="xs:string" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="relation" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="sourcename" use="required" type="xs:string"/>
								<xs:attribute name="left" use="required" type="xs:string"/>
								<xs:attribute name="right" use="required" type="xs:string"/>
								<xs:attribute name="id" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="context" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:choice>
									<xs:element name="js">
										<xs:complexType>
											<xs:group ref="expressionGroup"/>
										</xs:complexType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
          <xs:attribute name="width" use="optional" type="xs:integer"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="jgrowtextarea">
				<xs:complexType>
					<xs:attribute name="rows" type="xs:integer" use="optional"/>
					<xs:attribute name="cols" type="xs:integer" use="optional"/>
					<xs:attribute name="maxheight" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="multifile">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="relation" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="sourcename" use="required" type="xs:string"/>
								<xs:attribute name="left" use="required" type="xs:string"/>
								<xs:attribute name="right" use="required" type="xs:string"/>
								<xs:attribute name="id" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="filesystem" type="xs:string" use="required"/>
					<xs:attribute name="basepath" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="mcdropdown">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="text" type="xs:string" use="required"/>
								<xs:attribute name="value" type="xs:string" use="required"/>
								<xs:attribute name="name" type="xs:string" use="required"/>
								<xs:attribute name="parent" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="allowparentselect" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:group name="formFieldValidatorGroup">
		<xs:annotation><xs:documentation>Validator</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="required" type="xs:string"/>
			<xs:element name="regex" type="xs:string" />
			<xs:element name="chooseone">
				<xs:complexType>
					<xs:attribute name="group" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="maxlength" type="xs:integer"/>
		</xs:choice>
	</xs:group>

	<xs:complexType name="formFieldType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="group" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="field" type="formFieldType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="editor" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Editor for the field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="formFieldEditorGroup"/>
						<xs:element name="validators" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:group ref="formFieldValidatorGroup"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="renderer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Custom renderer for the field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="visible" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Context object member name for the field</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="caption" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Fixed caption</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="format" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Format string for the field value (like '{0:d}')</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lookup" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>"Lookup" provider name</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="view" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>Enables field for view (readonly) form</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="edit" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>Enables field for edit form</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="add" type="xs:boolean" use="optional">
			<xs:annotation>
				<xs:documentation>Enables field for add form</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:simpleType name="formFieldLayoutType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="vertical"/>
			<xs:enumeration value="horizontal"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="formFieldGroup">
		<xs:choice>
			<xs:element name="field">
				<xs:annotation>
					<xs:documentation>Form field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="formFieldType">
							<xs:attribute name="layout" use="optional" type="formFieldLayoutType"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:element name="views">
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="viewGroup" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="formActionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="inserted"/>
			<xs:enumeration value="inserting"/>
			<xs:enumeration value="deleting"/>
			<xs:enumeration value="deleted"/>
			<xs:enumeration value="cancel"/>
			<xs:enumeration value="initialize"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="listActionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="inserting"/>
			<xs:enumeration value="inserted"/>
			<xs:enumeration value="updating"/>
			<xs:enumeration value="updated"/>
			<xs:enumeration value="deleting"/>
			<xs:enumeration value="deleted"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="expressionGroup">
		<xs:annotation>
			<xs:documentation>Expression</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="route">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="context">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="request">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="const" type="xs:string"/>
			<xs:element name="format">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="expressionGroup"/>
					</xs:sequence>
					<xs:attribute name="str" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="field">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="get">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ognl">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="expression" type="xs:string" minOccurs="1" maxOccurs="1"/>
						<xs:element name="context">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="lookup">
				<xs:complexType>
					<xs:choice minOccurs="1" maxOccurs="1">
						<xs:group ref="expressionGroup"/>
					</xs:choice>
					<xs:attribute name="service" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="provider">
				<xs:complexType>
					<xs:choice minOccurs="1" maxOccurs="1">
						<xs:group ref="expressionGroup"/>
					</xs:choice>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="dictionary">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="entry">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
								<xs:attribute name="key" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="eq">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="2" maxOccurs="2"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="not">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="and">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="or">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="isempty">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="isinrole" type="xs:string">
				<xs:annotation>
					<xs:documentation>Checks context user role.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Custom C# code expression.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="listrowcount">
				<xs:annotation>
					<xs:documentation>List rows count value.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			
		</xs:choice>
	</xs:group>

	<xs:group name="actionOperationGroup">
		<xs:annotation>
			<xs:documentation>Operation</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="redirect">
				<xs:complexType>
					<xs:group ref="expressionGroup"/>
					<xs:attribute name="url" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="set">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="databind">
				<xs:complexType>
					<xs:attribute  name="mode" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="notpostback"/>
								<xs:enumeration value="always"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="operation">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="jscallback">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="function">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="arg">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
      <xs:element name="importdatacontext">
        <xs:complexType>
          <xs:attribute name="from" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Request"/>
                <xs:enumeration value="Route"/>
                <xs:enumeration value="Attributes"/>
                <xs:enumeration value="PageItems"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
		</xs:choice>
	</xs:group>

	<xs:group name="formActionOperationGroup">
		<xs:annotation>
			<xs:documentation>Form Operation</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="save" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:group ref="actionOperationGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>

	<xs:complexType name="baseFormType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="caption" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="expressionGroup"/>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="datasource" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:group ref="datasourceGroup" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- actions -->
			<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="formActionOperationGroup"/>
					</xs:sequence>
					<xs:attribute name="name" use="required" type="formActionNameType"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="header" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
					<xs:attribute name="view" type="xs:boolean" use="optional"/>
					<xs:attribute name="add" type="xs:boolean" use="optional"/>
					<xs:attribute name="edit" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
			
			<!-- fields -->
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="formFieldGroup" maxOccurs="unbounded"/>
			</xs:sequence>
			<!-- buttons -->

			<xs:element name="footer" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
					<xs:attribute name="view" type="xs:boolean" use="optional"/>
					<xs:attribute name="add" type="xs:boolean" use="optional"/>
					<xs:attribute name="edit" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>

		</xs:sequence>
		<xs:attribute name="caption" type="xs:string" use="optional"/>
		<xs:attribute name="datasource" type="xs:string" use="optional"/>

		<xs:attribute name="view" type="xs:boolean" use="optional"/>
		<xs:attribute name="edit" type="xs:boolean" use="optional"/>
		<xs:attribute name="add" type="xs:boolean" use="optional"/>

		<xs:attribute name="widget" type="xs:boolean" use="optional"/>
	</xs:complexType>


	<xs:group name="listFieldEditor">
		<xs:choice>
			<xs:group ref="formFieldEditorGroup"/>
		</xs:choice>
	</xs:group>

	<xs:complexType name="baseListType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="datasource" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:group ref="datasourceGroup" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="baseListElemsGroup"/>
			</xs:sequence>
		</xs:sequence>
		<xs:attribute name="edit" type="xs:boolean" use="optional"/>
		<xs:attribute name="add" type="xs:boolean" use="optional"/>
		<xs:attribute name="headers" type="xs:boolean" use="optional"/>
		<xs:attribute name="datasource" type="xs:string" use="optional"/>
		<xs:attribute name="datakey" type="xs:string" use="optional"/>
		<xs:attribute name="name" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:simpleType name="sortDirectionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="asc"/>
			<xs:enumeration value="desc"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="baseListElemsGroup">
		<xs:choice>
			<xs:element name="pager" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="allow" use="optional" type="xs:boolean"/>
					<xs:attribute name="pagesize" use="optional" type="xs:integer"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="sort" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="field" use="required" type="xs:string"/>
					<xs:attribute name="direction" use="required" type="sortDirectionType"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="field" type="formFieldType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<!-- actions -->
			<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="actionOperationGroup"/>
					</xs:sequence>
					<xs:attribute name="name" use="required" type="listActionNameType"/>
				</xs:complexType>
			</xs:element>
			<!-- fields -->
			<xs:element name="field" minOccurs="0" maxOccurs="unbounded" >
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="formFieldType">
							<xs:attribute name="sort" type="xs:boolean" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>		
	</xs:group>
	
	<xs:complexType name="baseChartType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="data" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="provider" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="dataset" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType mixed="true">
					<xs:attribute name="color" type="xs:string" use="optional"/>
					<xs:attribute name="legend" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="label" minOccurs="0" maxOccurs="1">
				<xs:complexType mixed="true">
					<xs:attribute name="lookup" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="width" use="required" type="xs:integer"/>
		<xs:attribute name="height" use="required" type="xs:integer"/>
		<xs:attribute name="title" use="optional" type="xs:string"/>
	</xs:complexType>

	<xs:simpleType name="chartBasicBarTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="stacked"/>
			<xs:enumeration value="grouped"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="chartBasicPieTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="normal"/>
			<xs:enumeration value="3d"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="chartBasicBarOrientationEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="vertical"/>
			<xs:enumeration value="horizontal"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="chartBasicBarType">
		<xs:complexContent>
			<xs:extension base="baseChartType">
				<xs:attribute name="type" type="chartBasicBarTypeEnum" use="optional"/>
				<xs:attribute name="orientation" type="chartBasicBarOrientationEnum" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="chartBasicPieType">
		<xs:complexContent>
			<xs:extension base="baseChartType">
				<xs:attribute name="type" type="chartBasicPieTypeEnum" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="googlechartGroup">
		<xs:choice>
			<xs:element name="bar" type="chartBasicBarType"/>
			<xs:element name="pie" type="chartBasicPieType"/>
			<xs:element name="line" type="baseChartType"/>
		</xs:choice>
	</xs:group>

	<xs:group name="mschartGroup">
		<xs:choice>
			<xs:element name="bar" type="chartBasicBarType"/>
			<xs:element name="pie" type="chartBasicPieType"/>
			<xs:element name="line" type="baseChartType"/>
		</xs:choice>
	</xs:group>
		
</xs:schema>
