<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="WikiDoc.xsl"?>
<xs:schema targetNamespace="urn:schemas-nreco:nreco:core:v1" 
					 xmlns="urn:schemas-nreco:nreco:core:v1" 
					 elementFormDefault="qualified"
					 xmlns:xs="http://www.w3.org/2001/XMLSchema"
					 xmlns:vs="http://schemas.microsoft.com/Visual-Studio-Intellisense">
	
	<xs:annotation>
		<xs:documentation>NReco Operation DSM Documentation</xs:documentation>
	</xs:annotation>

	<xs:element name="operations">
		<xs:annotation>
			<xs:documentation>Operations container.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="operation" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="provider" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="operation">
		<xs:annotation>
			<xs:documentation>Define NReco operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:group ref="operationGroup" minOccurs="1" maxOccurs="1"/>
			<xs:attribute name="name" use="optional" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="provider">
		<xs:annotation>
			<xs:documentation>Define NReco provider.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:group ref="providerGroup" minOccurs="1" maxOccurs="1"/>
			<xs:attribute name="name" use="optional" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:group name="chainCallGroup">
		<xs:annotation>
			<xs:documentation>Chain</xs:documentation>
		</xs:annotation>	
		<xs:choice>
			<xs:element name="execute">
				<xs:annotation>
					<xs:documentation>Call operation instruction.</xs:documentation>
				</xs:annotation>	
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chainCallType">
							<xs:sequence>
								<xs:element name="target" minOccurs="0">
									<xs:complexType>
										<xs:group ref="operationGroup"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="provide">
				<xs:annotation>
					<xs:documentation>Call provider instruction.</xs:documentation>
				</xs:annotation>	
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="chainCallType">
							<xs:sequence>
								<xs:element name="target" minOccurs="0">
									<xs:complexType>
										<xs:group ref="providerGroup"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="result" minOccurs="0">
									<xs:complexType>
										<xs:group ref="providerGroup"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="result" type="xs:string" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:group name="providerGroup">
		<xs:annotation>
			<xs:documentation>Provider</xs:documentation>
		</xs:annotation>		
		<xs:choice>
			<xs:element name="const" type="constProviderType">
				<xs:annotation>
					<xs:documentation>Constant provider</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ognl" type="ognlProviderType">
				<xs:annotation>
					<xs:documentation>Evaluate OGNL expression</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="linq" type="linqProviderType">
				<xs:annotation>
					<xs:documentation>Evaluate Dynamic LINQ expression</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="csharp" type="csharpOperationType">
				<xs:annotation>
					<xs:documentation>Execute C# code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="invoke" type="invokeOperationType"/>
			<xs:element name="context" type="contextProviderType"/>
			<xs:element name="dictionary" type="dictionaryProviderType"/>
			<xs:element name="proxy" type="providerCallType"/>
			<xs:element name="chain" type="chainProviderType"/>
			<xs:element name="listdictionary" type="listDictionaryProviderType"/>
			<xs:element name="dalc" type="dalcProviderType">
				<xs:annotation>
					<xs:documentation>DALC Provider</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="relex" type="relexQueryProviderType">
				<xs:annotation>
					<xs:documentation>Build query from relational expression</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="webroute">
				<xs:complexType>
					<xs:group ref="providerGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="userkey">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:element name="ref">
				<xs:complexType><xs:attribute name="name" use="required" type="xs:string"/></xs:complexType>
			</xs:element>
			<xs:any namespace="##other"/>
		</xs:choice>
	</xs:group>

	<xs:group name="operationGroup">
		<xs:annotation>
			<xs:documentation>Operation</xs:documentation>
		</xs:annotation>		
		<xs:choice>
			<xs:element name="chain" type="chainOperationType"/>
			<xs:element name="csharp" type="csharpOperationType"/>
			<xs:element name="lazy" type="lazyOperationType"/>
			<xs:element name="invoke" type="invokeOperationType"/>
			<xs:element name="transaction" type="transactionOperationType"/>
			<xs:element name="each" type="eachOperationType"/>
			<xs:element name="throw" type="throwOperationType"/>
			<xs:element name="ref">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:any namespace="##other"/>
		</xs:choice>
	</xs:group>
	
	<xs:complexType name="chainOperationType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="chainCallGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="chainProviderType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="chainCallGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="context" type="xs:string" use="optional"/>
		<xs:attribute name="result" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:complexType name="chainCallType">
		<xs:sequence>
			<xs:element name="condition" minOccurs="0">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="context" minOccurs="0">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="if" type="xs:string" minOccurs="0"/>			
		</xs:sequence>
		<xs:attribute name="target" type="xs:string" use="optional"/>
		<xs:attribute name="if" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:complexType name="constProviderType" mixed="true">
		<xs:choice minOccurs="0">
			<xs:any namespace="##any" minOccurs="0"/>
		</xs:choice>
		<xs:attribute name="value" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:complexType name="ognlProviderType" mixed="true">
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="linqProviderType" mixed="true">
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="csharpOperationType" mixed="true">
		<xs:sequence>
			<xs:element name="assembly" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="name" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="namespace" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="name" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="var" type="csharpVarType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="variable" type="csharpVarType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="csharpVarType">
		<xs:group ref="providerGroup"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="type" type="csharpVarTypeType" use="required"/>
		<xs:attribute name="provider" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:simpleType name="csharpVarTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="int"/>
			<xs:enumeration value="integer"/>
			<xs:enumeration value="string"/>
			<xs:enumeration value="datetime"/>
			<xs:enumeration value="provider"/>
			<xs:enumeration value="operation"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="invokeOperationType">
		<xs:sequence>
			<xs:element name="target" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:choice>
						<xs:group ref="providerGroup"/>
						<xs:element name="type" type="xs:string"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="method" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="args" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="providerGroup" minOccurs="0" maxOccurs="unbounded"/>
				</xs:complexType>				
			</xs:element>
		</xs:sequence>
		<xs:attribute name="target" type="xs:string" use="optional"/>
		<xs:attribute name="method" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:complexType name="lazyOperationType">
		<xs:attribute name="operation" type="xs:string" use="required"/>
	</xs:complexType>

	<xs:complexType name="transactionOperationType">
		<xs:sequence>
			<xs:element name="begin" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="operationGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="commit" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="operationGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="abort" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="operationGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="operation" type="xs:string" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="nameValueType">
		<xs:sequence>
			<xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType mixed="true">
					<xs:sequence maxOccurs="1" minOccurs="0">
						<xs:any namespace="##any"/>
					</xs:sequence>
					<xs:attribute name="key" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>
	</xs:complexType>	
	<xs:element name="name-value" type="nameValueType"/>


	<xs:complexType name="listDictionaryProviderType">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="key" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="value" minOccurs="1" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="contextProviderType">
	</xs:complexType>

	<xs:complexType name="dictionaryProviderType">
		<xs:sequence>
			<xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence maxOccurs="1" minOccurs="1">
						<xs:group ref="providerGroup"/>
					</xs:sequence>
					<xs:attribute name="key" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>	

	<xs:complexType name="providerCallType">
		<xs:sequence minOccurs="0">
			<xs:element name="context" minOccurs="0">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="target" minOccurs="0">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="result" minOccurs="0">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="target" type="xs:string" use="optional"/>
	</xs:complexType>
	
	<xs:complexType name="eachOperationType">
		<xs:sequence>
			<xs:element name="from" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="do" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="operationGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="from" type="xs:string" use="optional"/>
		<xs:attribute name="do" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:complexType name="throwOperationType">
		<xs:sequence>
			<xs:element name="message" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="providerGroup"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="message" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:simpleType name="dalcProviderResultType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="object"/>
			<xs:enumeration value="record"/>
			<xs:enumeration value="list"/>
			<xs:enumeration value="recordlist"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="dalcProviderType">
		<xs:sequence maxOccurs="1" minOccurs="0">
			<xs:element name="query">
				<xs:complexType mixed="true">
					<xs:group ref="providerGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="sort" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="from" use="required" type="xs:string"/>
		<xs:attribute name="result" use="optional" type="dalcProviderResultType"/>
		<xs:attribute name="query" use="optional" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="relexQueryProviderType" mixed="true">
		<xs:attribute name="resolver" type="xs:string" use="optional"/>
		<xs:attribute name="sort" type="xs:string" use="optional"/>
	</xs:complexType>

</xs:schema>
